import tkinter as tk
from tkinter import messagebox

class TodoListApp:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do List App")
        
        self.tasks = {}

        # Create GUI elements
        self.task_listbox = tk.Listbox(root, width=50, height=10)
        self.task_listbox.pack(pady=20)

        self.task_entry = tk.Entry(root, width=50)
        self.task_entry.pack()

        self.add_button = tk.Button(root, text="Add Task", command=self.add_task)
        self.add_button.pack(pady=10)

        self.update_button = tk.Button(root, text="Update Task", command=self.update_task)
        self.update_button.pack()

        self.delete_button = tk.Button(root, text="Delete Task", command=self.delete_task)
        self.delete_button.pack()

        self.refresh_tasks()

    def refresh_tasks(self):
        self.task_listbox.delete(0, tk.END)
        for task, priority in self.tasks.items():
            self.task_listbox.insert(tk.END, f"{task}: {priority}")

    def add_task(self):
        task = self.task_entry.get().strip()
        if task:
            priority = messagebox.askquestion("Priority", "High priority?")
            self.tasks[task] = "High" if priority == 'yes' else "Normal"
            self.task_entry.delete(0, tk.END)
            self.refresh_tasks()
        else:
            messagebox.showwarning("Warning", "Task cannot be empty!")

    def update_task(self):
        selected_task = self.task_listbox.curselection()
        if selected_task:
            task = list(self.tasks.keys())[selected_task[0]]
            priority = messagebox.askquestion("Priority", "High priority?")
            self.tasks[task] = "High" if priority == 'yes' else "Normal"
            self.refresh_tasks()
        else:
            messagebox.showwarning("Warning", "Select a task to update!")

    def delete_task(self):
        selected_task = self.task_listbox.curselection()
        if selected_task:
            task = list(self.tasks.keys())[selected_task[0]]
            del self.tasks[task]
            self.refresh_tasks()
        else:
            messagebox.showwarning("Warning", "Select a task to delete!")

if __name__ == "__main__":
    root = tk.Tk()
    app = TodoListApp(root)
    root.mainloop()
